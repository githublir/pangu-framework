<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- [aos_bp_act_re_procdef]SQLMapper自动映射 (注意:此映射文件自动生成-禁止手工修改) 2015-01-07 23:02:00 -->
<mapper namespace="cn.osworks.aos.modules.bpm.dao.mapper.Aos_bp_act_re_procdefMapper">
	
    <!-- 启用MyBatis二级缓存(以该Mapper文件的namespace属性作为一个缓存域) 。
	       同一缓存域下的Select语句结果集将被缓存；delete、update、insert语句执行则此缓存域的缓存将被刷新。
	       提示：只对一些频繁读取的基础数据、配置数据开启mybatis的二级缓存。大数据量的业务数据如果需要缓存请使用第三方缓存机制 -->
	<cache eviction="LRU" size="1024" readOnly="false" />

	<!-- 表字段 -->
	<sql id="column">
		id_,  <!-- id_ -->
		rev_,  <!-- rev_ -->
		category_,  <!-- category_ -->
		name_,  <!-- name_ -->
		key_,  <!-- key_ -->
		version_,  <!-- version_ -->
		deployment_id_,  <!-- deployment_id_ -->
		resource_name_,  <!-- resource_name_ -->
		dgrm_resource_name_,  <!-- dgrm_resource_name_ -->
		description_,  <!-- description_ -->
		has_start_form_key_,  <!-- has_start_form_key_ -->
		has_graphical_notation_,  <!-- has_graphical_notation_ -->
		suspension_state_,  <!-- suspension_state_ -->
		tenant_id_  <!-- tenant_id_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		aos_bp_act_re_procdef.id_,  <!-- id_ -->
		aos_bp_act_re_procdef.rev_,  <!-- rev_ -->
		aos_bp_act_re_procdef.category_,  <!-- category_ -->
		aos_bp_act_re_procdef.name_,  <!-- name_ -->
		aos_bp_act_re_procdef.key_,  <!-- key_ -->
		aos_bp_act_re_procdef.version_,  <!-- version_ -->
		aos_bp_act_re_procdef.deployment_id_,  <!-- deployment_id_ -->
		aos_bp_act_re_procdef.resource_name_,  <!-- resource_name_ -->
		aos_bp_act_re_procdef.dgrm_resource_name_,  <!-- dgrm_resource_name_ -->
		aos_bp_act_re_procdef.description_,  <!-- description_ -->
		aos_bp_act_re_procdef.has_start_form_key_,  <!-- has_start_form_key_ -->
		aos_bp_act_re_procdef.has_graphical_notation_,  <!-- has_graphical_notation_ -->
		aos_bp_act_re_procdef.suspension_state_,  <!-- suspension_state_ -->
		aos_bp_act_re_procdef.tenant_id_  <!-- tenant_id_ -->
	</sql>


	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		    AND id_ = #{id_}  <!-- id_ -->
		</if>
	   <if test="rev_ != null ">
		    AND rev_ = #{rev_}  <!-- rev_ -->
		</if>
	    <if test="category_ != null and category_ != ''">
		    AND category_ = #{category_}  <!-- category_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		    AND name_ = #{name_}  <!-- name_ -->
		</if>
	    <if test="key_ != null and key_ != ''">
		    AND key_ = #{key_}  <!-- key_ -->
		</if>
	   <if test="version_ != null ">
		    AND version_ = #{version_}  <!-- version_ -->
		</if>
	    <if test="deployment_id_ != null and deployment_id_ != ''">
		    AND deployment_id_ = #{deployment_id_}  <!-- deployment_id_ -->
		</if>
	    <if test="resource_name_ != null and resource_name_ != ''">
		    AND resource_name_ = #{resource_name_}  <!-- resource_name_ -->
		</if>
	    <if test="dgrm_resource_name_ != null and dgrm_resource_name_ != ''">
		    AND dgrm_resource_name_ = #{dgrm_resource_name_}  <!-- dgrm_resource_name_ -->
		</if>
	    <if test="description_ != null and description_ != ''">
		    AND description_ = #{description_}  <!-- description_ -->
		</if>
	    <if test="has_start_form_key_ != null and has_start_form_key_ != ''">
		    AND has_start_form_key_ = #{has_start_form_key_}  <!-- has_start_form_key_ -->
		</if>
	    <if test="has_graphical_notation_ != null and has_graphical_notation_ != ''">
		    AND has_graphical_notation_ = #{has_graphical_notation_}  <!-- has_graphical_notation_ -->
		</if>
	   <if test="suspension_state_ != null ">
		    AND suspension_state_ = #{suspension_state_}  <!-- suspension_state_ -->
		</if>
	    <if test="tenant_id_ != null and tenant_id_ != ''">
		    AND tenant_id_ = #{tenant_id_}  <!-- tenant_id_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		    AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	   <if test="rev_ != null ">
            AND rev_ = '%${rev_}%'  <!-- rev_ -->
		</if>
	    <if test="category_ != null and category_ != ''">
		    AND category_ like '%${category_}%'  <!-- category_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		    AND name_ like '%${name_}%'  <!-- name_ -->
		</if>
	    <if test="key_ != null and key_ != ''">
		    AND key_ like '%${key_}%'  <!-- key_ -->
		</if>
	   <if test="version_ != null ">
            AND version_ = '%${version_}%'  <!-- version_ -->
		</if>
	    <if test="deployment_id_ != null and deployment_id_ != ''">
		    AND deployment_id_ like '%${deployment_id_}%'  <!-- deployment_id_ -->
		</if>
	    <if test="resource_name_ != null and resource_name_ != ''">
		    AND resource_name_ like '%${resource_name_}%'  <!-- resource_name_ -->
		</if>
	    <if test="dgrm_resource_name_ != null and dgrm_resource_name_ != ''">
		    AND dgrm_resource_name_ like '%${dgrm_resource_name_}%'  <!-- dgrm_resource_name_ -->
		</if>
	    <if test="description_ != null and description_ != ''">
		    AND description_ like '%${description_}%'  <!-- description_ -->
		</if>
	    <if test="has_start_form_key_ != null and has_start_form_key_ != ''">
		    AND has_start_form_key_ like '%${has_start_form_key_}%'  <!-- has_start_form_key_ -->
		</if>
	    <if test="has_graphical_notation_ != null and has_graphical_notation_ != ''">
		    AND has_graphical_notation_ like '%${has_graphical_notation_}%'  <!-- has_graphical_notation_ -->
		</if>
	   <if test="suspension_state_ != null ">
            AND suspension_state_ = '%${suspension_state_}%'  <!-- suspension_state_ -->
		</if>
	    <if test="tenant_id_ != null and tenant_id_ != ''">
		    AND tenant_id_ like '%${tenant_id_}%'  <!-- tenant_id_ -->
		</if>
	</sql>

	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" parameterType="Aos_bp_act_re_procdefPO">
		INSERT INTO aos_bp_act_re_procdef (
		    <include refid="column" />
		)
		VALUES (
		#{id_, jdbcType=VARCHAR},  <!-- id_ -->
		#{rev_, jdbcType=INTEGER},  <!-- rev_ -->
		#{category_, jdbcType=VARCHAR},  <!-- category_ -->
		#{name_, jdbcType=VARCHAR},  <!-- name_ -->
		#{key_, jdbcType=VARCHAR},  <!-- key_ -->
		#{version_, jdbcType=INTEGER},  <!-- version_ -->
		#{deployment_id_, jdbcType=VARCHAR},  <!-- deployment_id_ -->
		#{resource_name_, jdbcType=VARCHAR},  <!-- resource_name_ -->
		#{dgrm_resource_name_, jdbcType=VARCHAR},  <!-- dgrm_resource_name_ -->
		#{description_, jdbcType=VARCHAR},  <!-- description_ -->
		#{has_start_form_key_, jdbcType=VARCHAR},  <!-- has_start_form_key_ -->
		#{has_graphical_notation_, jdbcType=VARCHAR},  <!-- has_graphical_notation_ -->
		#{suspension_state_, jdbcType=INTEGER},  <!-- suspension_state_ -->
		#{tenant_id_, jdbcType=VARCHAR}  <!-- tenant_id_ -->
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" parameterType="Aos_bp_act_re_procdefPO">
		INSERT INTO aos_bp_act_re_procdef (
		<if test="rev_ != null">
	      rev_,  <!-- rev_ -->
	   </if>
		<if test="category_ != null and category_ != ''">
	      category_,  <!-- category_ -->
	   </if>
		<if test="name_ != null and name_ != ''">
	      name_,  <!-- name_ -->
	   </if>
		<if test="key_ != null and key_ != ''">
	      key_,  <!-- key_ -->
	   </if>
		<if test="version_ != null">
	      version_,  <!-- version_ -->
	   </if>
		<if test="deployment_id_ != null and deployment_id_ != ''">
	      deployment_id_,  <!-- deployment_id_ -->
	   </if>
		<if test="resource_name_ != null and resource_name_ != ''">
	      resource_name_,  <!-- resource_name_ -->
	   </if>
		<if test="dgrm_resource_name_ != null and dgrm_resource_name_ != ''">
	      dgrm_resource_name_,  <!-- dgrm_resource_name_ -->
	   </if>
		<if test="description_ != null and description_ != ''">
	      description_,  <!-- description_ -->
	   </if>
		<if test="has_start_form_key_ != null and has_start_form_key_ != ''">
	      has_start_form_key_,  <!-- has_start_form_key_ -->
	   </if>
		<if test="has_graphical_notation_ != null and has_graphical_notation_ != ''">
	      has_graphical_notation_,  <!-- has_graphical_notation_ -->
	   </if>
		<if test="suspension_state_ != null">
	      suspension_state_,  <!-- suspension_state_ -->
	   </if>
		<if test="tenant_id_ != null and tenant_id_ != ''">
	      tenant_id_,  <!-- tenant_id_ -->
	   </if>
		<if test="id_ != null and id_ != ''">
	      id_  <!-- id_ -->
	   </if>
		)
		VALUES (
		<if test="rev_ != null">
		  #{rev_, jdbcType=INTEGER},  <!-- rev_ -->
	    </if>
		<if test="category_ != null and category_ != ''">
		  #{category_, jdbcType=VARCHAR},  <!-- category_ -->
	    </if>
		<if test="name_ != null and name_ != ''">
		  #{name_, jdbcType=VARCHAR},  <!-- name_ -->
	    </if>
		<if test="key_ != null and key_ != ''">
		  #{key_, jdbcType=VARCHAR},  <!-- key_ -->
	    </if>
		<if test="version_ != null">
		  #{version_, jdbcType=INTEGER},  <!-- version_ -->
	    </if>
		<if test="deployment_id_ != null and deployment_id_ != ''">
		  #{deployment_id_, jdbcType=VARCHAR},  <!-- deployment_id_ -->
	    </if>
		<if test="resource_name_ != null and resource_name_ != ''">
		  #{resource_name_, jdbcType=VARCHAR},  <!-- resource_name_ -->
	    </if>
		<if test="dgrm_resource_name_ != null and dgrm_resource_name_ != ''">
		  #{dgrm_resource_name_, jdbcType=VARCHAR},  <!-- dgrm_resource_name_ -->
	    </if>
		<if test="description_ != null and description_ != ''">
		  #{description_, jdbcType=VARCHAR},  <!-- description_ -->
	    </if>
		<if test="has_start_form_key_ != null and has_start_form_key_ != ''">
		  #{has_start_form_key_, jdbcType=VARCHAR},  <!-- has_start_form_key_ -->
	    </if>
		<if test="has_graphical_notation_ != null and has_graphical_notation_ != ''">
		  #{has_graphical_notation_, jdbcType=VARCHAR},  <!-- has_graphical_notation_ -->
	    </if>
		<if test="suspension_state_ != null">
		  #{suspension_state_, jdbcType=INTEGER},  <!-- suspension_state_ -->
	    </if>
		<if test="tenant_id_ != null and tenant_id_ != ''">
		  #{tenant_id_, jdbcType=VARCHAR},  <!-- tenant_id_ -->
	    </if>
		<if test="id_ != null and id_ != ''">
	      #{id_, jdbcType=VARCHAR}  <!-- id_ -->
		</if>
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_bp_act_re_procdefPO">
		UPDATE aos_bp_act_re_procdef
		<set>
			<if test="id_ != null">
				id_ = #{id_},  <!-- id_ -->
			</if>
			<if test="rev_ != null">
				rev_ = #{rev_},  <!-- rev_ -->
			</if>
			<if test="category_ != null">
				category_ = #{category_},  <!-- category_ -->
			</if>
			<if test="name_ != null">
				name_ = #{name_},  <!-- name_ -->
			</if>
			<if test="key_ != null">
				key_ = #{key_},  <!-- key_ -->
			</if>
			<if test="version_ != null">
				version_ = #{version_},  <!-- version_ -->
			</if>
			<if test="deployment_id_ != null">
				deployment_id_ = #{deployment_id_},  <!-- deployment_id_ -->
			</if>
			<if test="resource_name_ != null">
				resource_name_ = #{resource_name_},  <!-- resource_name_ -->
			</if>
			<if test="dgrm_resource_name_ != null">
				dgrm_resource_name_ = #{dgrm_resource_name_},  <!-- dgrm_resource_name_ -->
			</if>
			<if test="description_ != null">
				description_ = #{description_},  <!-- description_ -->
			</if>
			<if test="has_start_form_key_ != null">
				has_start_form_key_ = #{has_start_form_key_},  <!-- has_start_form_key_ -->
			</if>
			<if test="has_graphical_notation_ != null">
				has_graphical_notation_ = #{has_graphical_notation_},  <!-- has_graphical_notation_ -->
			</if>
			<if test="suspension_state_ != null">
				suspension_state_ = #{suspension_state_},  <!-- suspension_state_ -->
			</if>
			<if test="tenant_id_ != null">
				tenant_id_ = #{tenant_id_},  <!-- tenant_id_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_bp_act_re_procdefPO">
		SELECT
		<include refid="column" />
		FROM aos_bp_act_re_procdef WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_bp_act_re_procdefPO">
		SELECT
		    <include refid="column" />
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_bp_act_re_procdefPO">
		SELECT
			<include refid="column" />	
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_bp_act_re_procdefPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_bp_act_re_procdefPO">
		SELECT
			<include refid="column" />	
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_bp_act_re_procdefPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_bp_act_re_procdef WHERE  id_ = #{id_}
	</delete>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS rows FROM aos_bp_act_re_procdef
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_bp_act_re_procdef
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
</mapper>
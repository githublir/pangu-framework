<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 流程定义扩展表[aos_sys_wf_procdef]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台开发插件自动生成-禁止手工修改 2015-08-17 22:20:00 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Aos_sys_wf_procdefMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" parameterType="Aos_sys_wf_procdefPO">
		INSERT INTO aos_sys_wf_procdef (
		<if test="model_id_ != null and model_id_ != ''">
	         model_id_, <!-- 模型id -->
		</if>
		<if test="proc_def_id_ != null and proc_def_id_ != ''">
	         proc_def_id_, <!-- 流程定义id -->
		</if>
		<if test="deploy_user_id_ != null and deploy_user_id_ != ''">
	         deploy_user_id_, <!--  部署人流水号 -->
		</if>
		<if test="deploy_user_ != null and deploy_user_ != ''">
	         deploy_user_, <!-- 部署人 -->
		</if>
		<if test="deploy_time_ != null and deploy_time_ != ''">
	         deploy_time_, <!-- 部署时间 -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- 流水号 -->
	   </if>
		)VALUES(
		<if test="model_id_ != null and model_id_ != ''">
	          #{model_id_, jdbcType=VARCHAR}, <!-- 模型id -->
	    </if>
		<if test="proc_def_id_ != null and proc_def_id_ != ''">
	          #{proc_def_id_, jdbcType=VARCHAR}, <!-- 流程定义id -->
	    </if>
		<if test="deploy_user_id_ != null and deploy_user_id_ != ''">
	          #{deploy_user_id_, jdbcType=VARCHAR}, <!--  部署人流水号 -->
	    </if>
		<if test="deploy_user_ != null and deploy_user_ != ''">
	          #{deploy_user_, jdbcType=VARCHAR}, <!-- 部署人 -->
	    </if>
		<if test="deploy_time_ != null and deploy_time_ != ''">
	          #{deploy_time_, jdbcType=VARCHAR}, <!-- 部署时间 -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- 流水号 -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" parameterType="Aos_sys_wf_procdefPO">
		INSERT INTO aos_sys_wf_procdef (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- 流水号 -->
		    #{model_id_, jdbcType=VARCHAR},  <!-- 模型id -->
		    #{proc_def_id_, jdbcType=VARCHAR},  <!-- 流程定义id -->
		    #{deploy_user_id_, jdbcType=VARCHAR},  <!--  部署人流水号 -->
		    #{deploy_user_, jdbcType=VARCHAR},  <!-- 部署人 -->
		    #{deploy_time_, jdbcType=VARCHAR}  <!-- 部署时间 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_sys_wf_procdefPO">
		UPDATE aos_sys_wf_procdef
		<set>
			<if test="id_ != null">
		          id_ = #{id_},  <!-- 流水号 -->
			</if>
			<if test="model_id_ != null">
		          model_id_ = #{model_id_},  <!-- 模型id -->
			</if>
			<if test="proc_def_id_ != null">
		          proc_def_id_ = #{proc_def_id_},  <!-- 流程定义id -->
			</if>
			<if test="deploy_user_id_ != null">
		          deploy_user_id_ = #{deploy_user_id_},  <!--  部署人流水号 -->
			</if>
			<if test="deploy_user_ != null">
		          deploy_user_ = #{deploy_user_},  <!-- 部署人 -->
			</if>
			<if test="deploy_time_ != null">
		          deploy_time_ = #{deploy_time_},  <!-- 部署时间 -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_sys_wf_procdef WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_sys_wf_procdefPO">
		SELECT
		<include refid="column" />
		FROM aos_sys_wf_procdef WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_sys_wf_procdefPO">
		SELECT
		    <include refid="column" />
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_sys_wf_procdefPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_sys_wf_procdefPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_sys_wf_procdefPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_sys_wf_procdefPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM aos_sys_wf_procdef
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_sys_wf_procdef
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- 流水号 -->
		  model_id_,  <!-- 模型id -->
		  proc_def_id_,  <!-- 流程定义id -->
		  deploy_user_id_,  <!--  部署人流水号 -->
		  deploy_user_,  <!-- 部署人 -->
		  deploy_time_  <!-- 部署时间 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  aos_sys_wf_procdef.id_,  <!-- 流水号 -->
		  aos_sys_wf_procdef.model_id_,  <!-- 模型id -->
		  aos_sys_wf_procdef.proc_def_id_,  <!-- 流程定义id -->
		  aos_sys_wf_procdef.deploy_user_id_,  <!--  部署人流水号 -->
		  aos_sys_wf_procdef.deploy_user_,  <!-- 部署人 -->
		  aos_sys_wf_procdef.deploy_time_  <!-- 部署时间 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- 流水号 -->
		</if>
	    <if test="model_id_ != null and model_id_ != ''">
		      AND model_id_ = #{model_id_}  <!-- 模型id -->
		</if>
	    <if test="proc_def_id_ != null and proc_def_id_ != ''">
		      AND proc_def_id_ = #{proc_def_id_}  <!-- 流程定义id -->
		</if>
	    <if test="deploy_user_id_ != null and deploy_user_id_ != ''">
		      AND deploy_user_id_ = #{deploy_user_id_}  <!--  部署人流水号 -->
		</if>
	    <if test="deploy_user_ != null and deploy_user_ != ''">
		      AND deploy_user_ = #{deploy_user_}  <!-- 部署人 -->
		</if>
	    <if test="deploy_time_ != null and deploy_time_ != ''">
		      AND deploy_time_ = #{deploy_time_}  <!-- 部署时间 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- 流水号 -->
		</if>
	    <if test="model_id_ != null and model_id_ != ''">
		      AND model_id_ like '%${model_id_}%'  <!-- 模型id -->
		</if>
	    <if test="proc_def_id_ != null and proc_def_id_ != ''">
		      AND proc_def_id_ like '%${proc_def_id_}%'  <!-- 流程定义id -->
		</if>
	    <if test="deploy_user_id_ != null and deploy_user_id_ != ''">
		      AND deploy_user_id_ like '%${deploy_user_id_}%'  <!--  部署人流水号 -->
		</if>
	    <if test="deploy_user_ != null and deploy_user_ != ''">
		      AND deploy_user_ like '%${deploy_user_}%'  <!-- 部署人 -->
		</if>
	    <if test="deploy_time_ != null and deploy_time_ != ''">
		      AND deploy_time_ like '%${deploy_time_}%'  <!-- 部署时间 -->
		</if>
	</sql>
	
</mapper>